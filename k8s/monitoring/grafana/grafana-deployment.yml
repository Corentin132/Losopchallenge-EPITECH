apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-core
  namespace: monitoring
  labels:
    app: grafana
    component: core
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
      component: core
  template:
    metadata:
      labels:
        app: grafana
        component: core
    spec:
      containers:
        - image: grafana/grafana:10.1.9
          name: grafana-core
          imagePullPolicy: IfNotPresent
          env:
            - name: GF_AUTH_BASIC_ENABLED
              value: "true"
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana
                  key: admin-username
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana
                  key: admin-password
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "false"
          readinessProbe:
            httpGet:
              path: /login
              port: 3000
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-persistent-storage
            - mountPath: /etc/grafana/provisioning/datasources
              name: grafana-datasources
            - mountPath: /var/lib/grafana/dashboards
              name: grafana-dashboard-volume
            - mountPath: /etc/grafana/provisioning/dashboards
              name: grafana-dashboard-definition
      volumes:
        - name: grafana-persistent-storage
          persistentVolumeClaim:
            claimName: grafana-persistent-storage
        - name: grafana-datasources
          configMap:
            name: grafana-datasources
            defaultMode: 420
        - name: grafana-dashboard-volume
          configMap:
            name: grafana-import-dashboards
            defaultMode: 420
        - name: grafana-dashboard-definition
          configMap:
            name: grafana-providers
            defaultMode: 420
